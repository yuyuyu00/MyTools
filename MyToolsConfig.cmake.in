#  Usage from an external project:
#    In your CMakeLists.txt, add these lines:
#
#    find_package(MyTools REQUIRED )
#    include_directories(${MyTools_INCLUDE_DIRS})
#    target_link_libraries(MY_TARGET_NAME ${MyTools_LIBS})

# - Config file for the FooBar package
# It defines the following variables
#  MyTools_INCLUDE_DIRS - include directories for FooBar
#  MyTools_LIBS    - libraries to link against
#  MyTools_EXE   - the bar executable



set(Open_DIR_HINTS @OpenCV_DIR@)

if (MyTools_FIND_QUIETLY)
   find_package(OpenCV QUIET HINTS ${Opencv_DIR_HINTS})
elseif (MyTools_FIND_REQUIRED)
   find_package(OpenCV REQUIRED HINTS ${Opencv_DIR_HINTS})
else ()
   find_package(OpenCV HINTS ${Opencv_DIR_HINTS})
endif()


 
# Compute paths
get_filename_component(MyTools_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
#set(MyTools_CMAKE_DIR "@PACKAGE_CARTOGRAPHER_CMAKE_DIR@")


set(MyTools_INCLUDE_DIRS "@CONF_INCLUDE_DIRS@")

set(MyTools_LIBS "@CONF_LIBS@")
 
# Our library dependencies (contains definitions for IMPORTED targets)
if(NOT TARGET foo AND NOT MyTools_BINARY_DIR)
#  include("${MyTools_CMAKE_DIR}/MyToolsTargets.cmake")
endif()
 
# These are IMPORTED targets created by FooBarTargets.cmake
#set(MyTools_LIBRARIES MyTools)
#set(MyTools_EXECUTABLE bar)
